{"compilerOptions":{"css":"external","dev":true},"configFile":"C:\\Users\\justu\\Desktop\\wicrypt_project\\crypt\\svelte.config.js","extensions":[".svelte"],"preprocess":{"name":"vite-preprocess","script":"async script({ attributes, content, filename = '' }) {\r\n\t\t\tconst lang = /** @type {string} */ (attributes.lang);\r\n\t\t\tif (!supportedScriptLangs.includes(lang)) return;\r\n\t\t\tconst { code, map } = await transformWithEsbuild(content, filename, {\r\n\t\t\t\tloader: /** @type {import('vite').ESBuildOptions['loader']} */ (lang),\r\n\t\t\t\ttarget: 'esnext',\r\n\t\t\t\ttsconfigRaw: {\r\n\t\t\t\t\tcompilerOptions: {\r\n\t\t\t\t\t\t// svelte typescript needs this flag to work with type imports\r\n\t\t\t\t\t\timportsNotUsedAsValues: 'preserve',\r\n\t\t\t\t\t\tpreserveValueImports: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmapToRelative(map, filename);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tcode,\r\n\t\t\t\tmap\r\n\t\t\t};\r\n\t\t}","style":"async ({ attributes, content, filename = '' }) => {\r\n\t\tconst ext = attributes.lang ? `.${attributes.lang}` : '.css';\r\n\t\tif (attributes.lang && !isCSSRequest(ext)) return;\r\n\t\tif (!cssTransform) {\r\n\t\t\tcssTransform = createCssTransform(style, config).then((t) => (cssTransform = t));\r\n\t\t}\r\n\t\tconst transform = await cssTransform;\r\n\t\tconst suffix = `${lang_sep}${ext}`;\r\n\t\tconst moduleId = `${filename}${suffix}`;\r\n\t\tconst { code, map, deps } = await transform(content, moduleId);\r\n\t\tremoveLangSuffix(map, suffix);\r\n\t\tmapToRelative(map, filename);\r\n\t\tconst dependencies = deps ? Array.from(deps).filter((d) => !d.endsWith(suffix)) : undefined;\r\n\t\treturn {\r\n\t\t\tcode,\r\n\t\t\tmap: map ?? undefined,\r\n\t\t\tdependencies\r\n\t\t};\r\n\t}"}}